---
import qs from "qs";

// Helpers
import fetchApi from "../../../lib/strapi";
import { urlTranslate } from "../../../utils/data-store.util";
import Images from "../helpers/images.astro";

// QS Query String
import { customPageLayoutAddOnsQs } from "../../../qs/customPages";

// Types
import type { LayoutData } from "../../../interfaces/layout";

// Components
import { Link } from "astro-link";

const { translationStore } = Astro.props;

// Import the QS Query string for custom slugs and prepare it for the API fetch
const query = qs.stringify(customPageLayoutAddOnsQs(), {
  encodeValuesOnly: true,
});

// Request to the Fetch Function to get the custom page slugs from the API
const layout = await fetchApi<LayoutData>({
  endpoint: "layout",
  wrappedByKey: "data",
  query: `?${query}`,
});

const {
  attributes: { most_loved_sports, no_deposit_sports, free_spin_sports },
} = layout;

// created a casino array so I only need to write the HTML once.
const sportArray = [
  {
    sport: most_loved_sports,
    title: translationStore?.bestWelcomeBonus,
    bonus: "bonusSection",
  },
  {
    sport: no_deposit_sports,
    title: translationStore?.bestNoDepositBonus,
    bonus: "noDepositSection",
  },
  {
    sport: free_spin_sports,
    title: translationStore?.bestFreeSpins,
    bonus: "freeSpinsSection",
  },
];
const PUBLIC_SITE_ID = import.meta.env.SITE_ID;
---

<!-- <div class="sticky top-2">
  {
    sportArray.map(
      (sportObj) =>
        sportObj.sport.data.length > 0 && (
          <div class="side-casino-table">
            <div class="rounded-t-[6px] py-[11px] px-3 bg-casino-table-header-bkg text-white text-[19px] leading-[24px] font-bold">
              {sportObj.title}
            </div>
            <table class="border-separate border-spacing-[11px] rounded-b-[6px]">
              <tbody>
                {sportObj.sport.data.map((sport) => (
                  <tr class="*:border-b *:border-b-black *:p-0 *:last:border-0">
                    <td>
                      <div class="flex items-center justify-between">
                        <div class="flex items-center pb-3">
                          <Images
                            alt={sport?.attributes?.title}
                            imageWidth={50}
                            imageHeight={50}
                            src={
                              sport?.attributes?.logoIcon?.data?.attributes?.url
                            }
                            classes="rounded-[4px] mr-[10px]"
                          />
                          <div class="">
                            <div class="line-clamp-1">
                              {sport?.attributes?.title}
                            </div>
                            <div>
                              {sport?.attributes?.[sportObj.bonus]?.bonusAmount}
                              {sportObj.bonus !== "freeSpinsSection" ? "â‚¬" : ""}
                            </div>
                          </div>
                        </div>
                        <Link
                          class="btn btn-misc uppercase text-white !text-[14px] px-[22.5px] w-fit h-[37px]"
                          href={
                            urlTranslate[
                              PUBLIC_SITE_ID as keyof typeof urlTranslate
                            ]["sport-pages"] +
                            "/" +
                            sport.attributes?.slug +
                            "/"
                          }
                        >
                          {translationStore?.review}
                        </Link>
                      </div>
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        )
    )
  }
</div> -->
