---
import qs from "qs";
import fetchApi from "../../../lib/strapi";
import MainLayout from "../../layouts/MainLayout.astro";
import { urlTranslate } from "../../../utils/data-store.util";
import { blogmetaQs } from "../../../qs/blog-meta";
import { categoryBlogsQs } from "../../../qs/category-blogs";
import { blogCategoryQs } from "../../../qs/blog-category";
import type { BlogList, CategoryList } from "../../../interfaces/blog";
import BlogListBlock from "../../components/blocks/blogListBlock.astro";
import Pagination from "../../components/helpers/pagination.astro";
import { getTranslations } from "../../../utils/api-requests";

const translationStore = await getTranslations();

const { categorySlug } = Astro.props;

//query for single blog page
const categoryQuery = qs.stringify(blogCategoryQs(12, 1, categorySlug), {
  encodeValuesOnly: true,
});

const blogQuery = qs.stringify(categoryBlogsQs(12, 1, categorySlug), {
  encodeValuesOnly: true,
});

const blogCategory = await fetchApi<CategoryList>({
  endpoint: "blog-categories",
  isPaginated: true,
  query: `?${categoryQuery}`,
});

const blogCards = await fetchApi<BlogList>({
  endpoint: "blogs",
  isPaginated: true,
  query: `?${blogQuery}`,
});

let siteID = import.meta.env.SITE_ID;
let siteURL = import.meta.env.FULL_URL;
let canonical = `${siteURL}${urlTranslate[siteID as keyof typeof urlTranslate]["blog-index"]}`;

//set page seo data
let seo = {
  pageTitle: `${blogCategory?.data[0]?.attributes?.seo?.metaTitle}`,
  metaDescription: `${blogCategory?.data[0]?.attributes?.seo?.metaDescription}`,
  url: canonical,
};

// Tell the browser to always check the freshness of the cache
Astro.response.headers.set(
  "Cache-Control",
  "public, max-age=0, must-revalidate"
);

// CDN Cache Control
Astro.response.headers.set(
  "Cache-Control",
  "public, max-age=300, s-maxage=3600, stale-while-revalidate=30"
);
---

<script define:vars={{ blogCategory }}>
  console.log("blogCategory", blogCategory);
</script>
<MainLayout seoData={seo}>
  <div class="bg-blog-list-bkg">
    <div class="xl:container px-2 pb-5 pt-4">
      <div class="xl:container px-2 pb-5 pt-4">
        <!-- <div class="grid grid-cols-1 md:grid-cols-3 gap-5"> -->
        <BlogListBlock data={blogCards.data} {translationStore} />
        <!-- </div> -->

        <Pagination
          currPage={blogCards?.meta?.pagination?.page}
          pageCount={blogCards?.meta?.pagination?.pageCount}
          path={urlTranslate[siteID as keyof typeof urlTranslate]["blog-pages"]}
          {translationStore}
        />
      </div>
    </div>
  </div>
</MainLayout>
