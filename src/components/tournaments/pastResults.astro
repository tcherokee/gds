---
// Component: Past Tournament Results Table
// Description: Displays a table of completed tournaments with their status and details

// import unix date formatter
import { formatUnixTimestamp } from "../../../lib/unixDateFormatter";

// Import types
import type { Tournament } from "../../../interfaces/tournaments";

// Props interface
interface Props {
  tournaments: Tournament[] | null;
}

const { tournaments } = Astro.props;
const completedTournaments = tournaments 
  ? tournaments.filter(tournament => !tournament.isLive)
  : [];
let error = null;

// Helper function to safely format the timestamp
const formatTimestamp = (timestamp: number | string | undefined) => {
  if (!timestamp) return 'Date not available';
  
  // Convert string to number if needed
  const numericTimestamp = typeof timestamp === 'string' 
    ? parseInt(timestamp, 10) 
    : timestamp;

  // Check if we have a valid number
  if (isNaN(numericTimestamp)) return 'Invalid date';

  return formatUnixTimestamp(numericTimestamp);
};
---

<!-- Tournament Results Section -->
<section class="py-20 px-4">
  <div class="mx-auto">
    <!-- Section Header -->
    <h2 class="text-4xl font-bold mb-12 text-center">
      Past Tournament Results
    </h2>

    <!-- Error Alert -->
    {
      error && (
        <div class="bg-red-500/10 border border-red-500 text-red-500 p-4 mb-8 rounded-lg">
          Error loading tournament results: {error}
        </div>
      )
    }

    <!-- Tournament Results Table -->
    <div class="overflow-x-auto">
      <table class="w-full">
        <!-- Table Header -->
        <thead>
          <tr class="border-b border-gray-700">
            <th class="text-left py-4 px-6">Tournament</th>
            <th class="text-left py-4 px-6">End Date</th>
            <th class="text-left py-4 px-6">Status</th>
            <th class="w-32"></th>
          </tr>
        </thead>
        <!-- Table Body -->
        <tbody>
          {
            completedTournaments.map((tournament: Tournament) => (
              <tr class="border-b border-gray-800 hover:bg-gray-800/50">
                <td class="py-4 px-6">
                  <div class="flex items-center gap-4">
                    {tournament.logoImage && (
                      <img
                        src={tournament.logoImage}
                        alt={tournament.name}
                        class="h-8 w-8 object-contain"
                        onerror="this.style.display='none'"
                      />
                    )}
                    <span class="font-semibold">{tournament.name}</span>
                  </div>
                </td>
                <td class="py-4 px-6">
                  {formatTimestamp(tournament.endDate)}
                </td>
                <td class="py-4 px-6">
                  <span class="inline-flex items-center px-2.5 py-0.5 rounded-full font-medium bg-yellow-500/10 text-yellow-500">
                    Completed
                  </span>
                </td>
                <td class="py-4 px-6 text-right">
                  <button class="inline-flex items-center gap-2 px-4 py-2 bg-misc text-white rounded-lg transition-colors">
                    Leaderboard
                  </button>
                </td>
              </tr>
            ))
          }
        </tbody>
      </table>
    </div>
  </div>
</section>
