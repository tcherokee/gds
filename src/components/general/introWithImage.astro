---

// Types
import type { TranslationData } from "../../../interfaces/common/types.ts"

// Stores
import { getTranslations } from "../../../stores/addTranslations";

// Set Up Translation Store
const translationStore: TranslationData = getTranslations.get()

// Helpers
import TimeDate from "../helpers/timeDate.svelte";
import TransformImage from "../helpers/images.astro";

const { data, timeDate, authorData } = Astro.props;

import HeaderAuthor from "../helpers/headerAuthor.astro"

---

<div class="intro-content">
  <div
    class="relative grid grid-cols-12 gap-1 pb-5 pt-0 px-2 lg:pt-10 xl:container {!hasSiblings &&
			'md:pb-[120px]'}"
  >
    <div
      class="stars relative order-2 col-span-12 lg:order-1 lg:col-span-7 lg:only-of-type:col-span-12 lg:z-20"
    >
      <div class="mx-auto {!transformHero && 'pt-10 lg:pt-0'} lg:mx-0">
        <h1 id="features-heading" class="font-medium m-0">{data?.heading}</h1>
        <div class="flex gap-2 items-center">
          <TimeDate {timeDate} />
          {authorData && <HeaderAuthor author={authorData} />}
        </div>
        <div class="flex flex-col-reverse mt-4 mb-5 lg:mb-0">
          <input type="checkbox" id="ReadMore" class="hidden peer" />
          <label
            for="ReadMore"
            class="absolute font-bold tracking-tight text-xs underline peer-checked:hidden underline-offset-4 right-0 bottom-0 block lg:hidden"
          >
            {translationStore.showMore}
          </label>
          <span
            class="clamped line-clamp-2 lg:line-clamp-none peer-checked:line-clamp-none peer-checked:*:-mb-4"
          >
            <Fragment set:html={data?.introduction} />
          </span>
        </div>
      </div>
    </div>

    {
      data?.image?.data?.attributes?.url && (
        <div class="relative flex items-center justify-center lg:justify-end mix-blend-lighten order-1 col-span-12 lg:order-2 lg:col-span-5 lg:aspect-[720/269] lg:absolute lg:z-10 lg:right-0 lg:top-0 lg:bottom-0">
          <TransformImage
            src={data?.image?.data?.attributes?.url}
            alt={
              data?.image?.data?.attributes?.alternativeText ?? data?.heading
            }
            imageWidth={515}
            imageHeight={200}
            imageQuality={100}
          />
        </div>
      )
    }
  </div>
</div>

<style lang="postcss">
	.clamped {
		:global(p) {
			/* margin: 0; */
			padding: 0;
		}
	}
</style>
