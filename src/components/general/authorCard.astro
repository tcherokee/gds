---
// First and Third Pary Plugins
import Icon from "astro-icon";

// Types
import type { TranslationData } from "../../../interfaces/common/types.ts";
import { urlTranslate } from "../../../utils/data-store.util";

//Helpers
import Images from "../helpers/images.astro";
import Link from "../helpers/link.astro";

// Stores
// import { getTranslations } from "../../../stores/addTranslations.ts";

// Get Astro Data from Props
const {
  data,
  translationStore,
  isFlat = false,
  authorIndex = false,
} = Astro.props;

// Destructuring Data conditionally to cater for the different format the API returns from author pages
const {
  firstName,
  lastName,
  photo,
  twitterLink,
  facebookLink,
  linkedInLink,
  jobTitle,
  experience,
  areaOfWork,
  specialization,
  content1,
} = isFlat ? data : data.data.attributes;

// If Author Index split content 1
const contentSplit = content1?.slice(0, 100) + "&hellip;";

// Set Up Translation Store
// const translationStore: TranslationData = getTranslations.get()

//generate author page url
const lcFirstName = firstName?.toLowerCase();
const lcLastName = lastName?.toLowerCase();
const siteID = import.meta.env.SITE_ID;
---

<div class="bg-author-wrapper-bkg m-0 rounded-lg p-3 mb-6 md:mb-0">
  <div
    class="flex flex-col md:flex-row items-center md:items-start w-full group-[.author-index]:flex-col group-[.author-index]:items-center"
  >
    <div class="mb-5 flex flex-col gap-2 shrink-0">
      <figure class="author-image rounded-lg overflow-hidden">
        <Images
          src={isFlat ? photo?.url : photo?.data?.attributes?.url}
          imageWidth={120}
          imageHeight={120}
          classes=""
          alt="{firstName} {lastName} photo"
        />
      </figure>
      {
        !authorIndex && (
          <div class="flex items-center justify-center gap-1 md:justify-normal">
            {twitterLink && (
              <Link href={`${twitterLink}/`}>
                <Icon name="twitter" height="25px" />
              </Link>
            )}
            {facebookLink && (
              <Link href={`${facebookLink}/`}>
                <Icon name="facebook" height="25px" class="fill-facebook" />
              </Link>
            )}
            {linkedInLink && (
              <Link href={`${linkedInLink}/`}>
                <Icon name="linkedIn" height="25px" class="fill-linkedin" />
              </Link>
            )}
          </div>
        )
      }
    </div>

    <div class="ml-5">
      <h4
        class="flex !mt-0 !text-[18px] md:!text-[20px] justify-center my-4 md:justify-normal md:mb-1 group-[.author-index]:justify-center"
      >
        <Link
          href={`${urlTranslate[siteID as keyof typeof urlTranslate]["author-page"]}/${lcFirstName}.${lcLastName}/`}
        >
          {`${firstName} ${lastName}`}
        </Link>
      </h4>
      <div
        class="flex md:mr-10 justify-center md:justify-start gap-2 flex-wrap mb-4"
      >
        {
          jobTitle && (
            <div class="bg-grey-300 text-black text-sm flex gap-1 w-fit py-1 px-3 rounded">
              <span class="block">{translationStore?.authorTitle}:</span>
              <span class="block">{jobTitle}</span>
            </div>
          )
        }
        {
          experience && (
            <div class="bg-grey-300 text-black text-sm flex gap-1 w-fit  py-1 px-3 rounded">
              <span class="block">{translationStore?.authorExperience}:</span>
              <span class="block">{experience}</span>
            </div>
          )
        }
        {
          areaOfWork && (
            <div class="bg-grey-300 text-black text-sm flex gap-1 w-fit  py-1 px-3 rounded">
              <span class="block">{translationStore?.authorAreaWork}:</span>
              <span class="block">{areaOfWork}</span>
            </div>
          )
        }
        {
          specialization && (
            <div class="bg-grey-300 text-black text-sm flex gap-1 w-fit  py-1 px-3 rounded">
              <span class="block">
                {translationStore?.authorSpecialization}:
              </span>
              <span class="block">{specialization}</span>
            </div>
          )
        }
      </div>
      <div class="">
        <Fragment set:html={authorIndex ? contentSplit : content1} />
      </div>
      {
        authorIndex && (
          <div class="flex items-center justify-center gap-1 mb-5">
            {twitterLink && (
              <Link href={`${twitterLink}/`}>
                <Icon name="twitter" height="25px" />
              </Link>
            )}
            {facebookLink && (
              <Link href={`${facebookLink}/`}>
                <Icon name="facebook" height="25px" class="fill-facebook" />
              </Link>
            )}
            {linkedInLink && (
              <Link href={`${linkedInLink}/`}>
                <Icon name="linkedIn" height="25px" class="fill-linkedin" />
              </Link>
            )}
          </div>
        )
      }
    </div>
  </div>

  <style is:global lang="postcss">
	h1, h2, h3, h4 {
		margin-bottom: 10px;
	}

	h2 + h3 {
		margin-top: 40px;
	}
</style>
</div>
