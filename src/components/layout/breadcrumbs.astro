---
// Helpers

// QS Query String
import { getBreadcrumbs } from "../../../stores/breadcrumbs";

const { breadcrumbs, breadcrumbKey } = Astro.props;

// Import the QS Query string for custom slugs and prepare it for the API fetch
// const query = qs.stringify(layoutQs(), { encodeValuesOnly: true });

// // Request to the Fetch Function to get the custom page slugs from the API
// const layout = await fetchApi<LayoutData>({
//   endpoint: "layout",
//   wrappedByKey: "data",
//   query: `?${query}`,
// });

// const {attributes: {casinoProvidersBreadcrumbs}} = layout;

console.log(breadcrumbs)

let pageBreadcrumbs = [...breadcrumbs];
// if (breadcrumbKey && layout.attributes[breadcrumbKey]) {
//   pageBreadcrumbs.unshift(...layout.attributes[breadcrumbKey]);
// }

const breadcrumStore: any = await getBreadcrumbs.get();
if (breadcrumbKey && breadcrumStore[breadcrumbKey]) {
  pageBreadcrumbs.unshift(...breadcrumStore[breadcrumbKey]);
}
if (breadcrumbKey && !breadcrumbs.length && !breadcrumStore[breadcrumbKey]) {
  pageBreadcrumbs = [
    {
      breadCrumbText: "HOME",
      breadCrumbUrl: null,
    },
  ];
}
---

<div class="custom-breadcrumbs bg-breadcrumb-bkg">
  <div class="xl:container py-2 px-2">
    <div class="text-xs leading-[12px] text-breadcrumb-text uppercase">
      {
        pageBreadcrumbs.length &&
          pageBreadcrumbs.map((breadcrumb: any, i: number) =>
            breadcrumb.breadCrumbUrl !== null ? (
              <>
                <a href={breadcrumb.breadCrumbUrl}>
                  {breadcrumb.breadCrumbText}
                </a>
                <span class="my-0 mr-[5px] ml-[2px] text-breadcrumb-separator">
                  {pageBreadcrumbs.length > i + 1 ? "/" : ""}
                </span>
              </>
            ) : (
              <span>{breadcrumb.breadCrumbText}</span>
            )
          )
      }
    </div>
  </div>
</div>

<style lang="scss">
  .custom-breadcrumbs {
    :global(a) {
      @apply underline;
      color: theme("colors.breadcrumb-text");
    }
  }
</style>
