---
import type { Blog } from "../../../interfaces/blog.js";
import Link from "../helpers/link.astro";
import BlogCard from "../blogs/blogCard.astro";

const {
  data,
  blogListLink = "",
  blogText = "",
  singleBlogPage = false,
  translationStore,
  isFeatured = false,
} = Astro.props;

const truncateAndCleanContent = (blogData: Blog[]): Blog[] => {
  return blogData.map((item) => {
    if (item.attributes && item.attributes.content1) {
      // Remove HTML tags
      const plainText = item.attributes.content1.replace(/<[^>]*>/g, "");

      // Split into words and truncate to 25 words
      const words = plainText.split(/\s+/).slice(0, 25).join(" ");

      // Update the content1 field
      item.attributes.content1 = words;
    } else if (item.attributes && item.attributes.title) {
      // Split the title into words and truncate to 10 words
      const truncatedTitle = item.attributes.title
        .split(/\s+/)
        .slice(0, 10)
        .join(" ");

      // Update the title field
      item.attributes.title = truncatedTitle;
    }
    return item;
  });
};

const truncatedData = truncateAndCleanContent(data as Blog[]);
---

<script define:vars={{ data }}>
  console.log("Blog block", data);
</script>
{
  isFeatured && (
    <div>
      <div class="relative xl:container px-2 blog-container">
        <div
          class={
            singleBlogPage ? "flex flex-col" : "grid grid-cols-1 md:grid-cols-3"
          }
        >
          <BlogCard data={truncatedData} {translationStore} {isFeatured} />
        </div>
        {blogListLink && (
          <div class="flex justify-center">
            <Link href={blogListLink?.url}>
              <button class="btn self-center mt-5 btn-secondary min-w-[300px] md:min-w-[500px]">
                {blogListLink?.label}
              </button>
            </Link>
          </div>
        )}
      </div>
    </div>
  )
}

{
  !isFeatured && (
    <div>
      <div class="blog-container">
        <div
          class={
            singleBlogPage ? "flex flex-col" : "grid grid-cols-1 md:grid-cols-3"
          }
        >
          <BlogCard data={truncatedData} {translationStore} />
        </div>

        {blogListLink && (
          <div class="flex justify-center">
            <Link href={blogListLink?.url}>
              <button class="btn self-center mt-5 btn-secondary min-w-[300px] md:min-w-[500px]">
                {blogListLink?.label}
              </button>
            </Link>
          </div>
        )}
      </div>
    </div>
  )
}

<style lang="postcss">
	.blog-container {
		:global(.blog-wrapper) {
			margin-right: 15px;
			margin-bottom: 10px;
		}
	}

	.blog-wrap {
		display: flex;
	}

	@media (max-width: 650px) {
		.blog-wrap {
			flex-direction: column;
		}
	}

	:global(.blog-btn) {
		width: fit-content;
		padding: 10px;
		text-transform: uppercase;
	}
</style>
