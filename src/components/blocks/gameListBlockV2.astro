---
import type { Game } from "../../../interfaces/games";
import GameCard from "../games/gameCard.astro";

// Stores
import { getTranslations } from "../../../stores/addTranslations";
import type {
  CategoryAttributes,
  TranslationData,
} from "../../../interfaces/common/types";
import fetchApi from "../../../lib/strapi";

const translationStore: TranslationData = getTranslations.get();
const slotCategories = await fetchApi<
  {
    id: number;
    attributes: CategoryAttributes;
  }[]
>({
  endpoint: "slot-categories",
  wrappedByKey: "data",
  query: `?fields[0]=id&fields[1]=slug&pagination[page]=1&pagination[pageSize]=1000&sort[0]=listSortOrder%3Aasc&fields[2]=title`,
});

const { data } = Astro.props;
---

<div>
  <div class="flex flex-col align-center relative xl:container px-2 pb-5">
    <div class="">
      <section
        aria-labelledby="filter-heading"
        class="!py-2.5 glowy-bkg shadow-none mb-5"
      >
        <div
          class="flex basis-full items-center gap-2 justify-between bg-transparent p-0 basis-2/5"
        >
          <div class="relative inline-block text-left">
            <div>
              <button
                type="button"
                class="inline-flex w-full justify-center gap-x-1.5 rounded-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50"
                id="menu-button"
                aria-expanded="true"
                aria-haspopup="true"
              >
                Options
                <svg
                  class="-mr-1 h-5 w-5 text-gray-400"
                  viewBox="0 0 20 20"
                  fill="currentColor"
                  aria-hidden="true"
                >
                  <path
                    fill-rule="evenodd"
                    d="M5.23 7.21a.75.75 0 011.06.02L10 11.168l3.71-3.938a.75.75 0 111.08 1.04l-4.25 4.5a.75.75 0 01-1.08 0l-4.25-4.5a.75.75 0 01.02-1.06z"
                    clip-rule="evenodd"></path>
                </svg>
              </button>
            </div>

            <!--
    Dropdown menu, show/hide based on menu state.

    Entering: "transition ease-out duration-100"
      From: "transform opacity-0 scale-95"
      To: "transform opacity-100 scale-100"
    Leaving: "transition ease-in duration-75"
      From: "transform opacity-100 scale-100"
      To: "transform opacity-0 scale-95"
  -->
            <div
              class="absolute right-0 z-10 mt-2 w-56 origin-top-right divide-y divide-gray-100 rounded-md bg-white shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none"
              role="menu"
              aria-orientation="vertical"
              aria-labelledby="menu-button"
              tabindex="-1"
            >
              <div class="relative">
                <div class="px-4 py-3" role="none">
                  <p class="text-sm" role="none">Signed in as</p>
                  <p
                    class="truncate text-sm font-medium text-gray-900"
                    role="none"
                  >
                    tom@example.com
                  </p>
                </div>
                <div class="py-1" role="none">
                  <!-- Active: "bg-gray-100 text-gray-900", Not Active: "text-gray-700" -->
                  <a
                    href="#"
                    class="text-gray-700 block px-4 py-2 text-sm"
                    role="menuitem"
                    tabindex="-1"
                    id="menu-item-0">Account settings</a
                  >
                  <a
                    href="#"
                    class="text-gray-700 block px-4 py-2 text-sm"
                    role="menuitem"
                    tabindex="-1"
                    id="menu-item-1">Support</a
                  >
                  <a
                    href="#"
                    class="text-gray-700 block px-4 py-2 text-sm"
                    role="menuitem"
                    tabindex="-1"
                    id="menu-item-2">License</a
                  >
                </div>
                <div class="py-1" role="none">
                  <form method="POST" action="#" role="none">
                    <button
                      type="submit"
                      class="text-gray-700 block w-full px-4 py-2 text-left text-sm"
                      role="menuitem"
                      tabindex="-1"
                      id="menu-item-3">Sign out</button
                    >
                  </form>
                </div>
              </div>
            </div>
          </div>
        </div>
      </section>
    </div>
    <div class="[&>*]:px-[6px] -mx-[6px] flex flex-wrap justify-center gap-y-3">
      {
        data.map((game: Game) => (
          <div class="w-1/2 sm:w-1/3 md:w-1/4 lg:w-1/5 xl:w-1/6">
            <GameCard game={game} />
          </div>
        ))
      }
    </div>

    <!-- Slot Categories Filter List -->
    <div
      class="absolute invisible max-h-[350px] top-11 overflow-y-auto transform opacity-0 scale-95 left-0 z-40 w-full origin-top-left rounded-b-md bg-white/[.9] border-background-900 border border-t-0 py-2 shadow-2xl open:transform open:opacity-100 open:scale-100 open:visible"
      id="slot-category-list"
    >
      {
        slotCategories.map((category) => (
          <div class="flex flex-col gap-y-2 py-1 px-2" role="none">
            <button
              class="p-2 text-sm uppercase font-medium text-left rounded-md hover:bg-blue-500 hover:text-white data-active:bg-blue-500 data-active:text-white"
              role="menuitem"
              tabindex="-1"
              id="mobile-menu-item-0"
            >
              {category.attributes.title}
            </button>
          </div>
        ))
      }
      <!-- {#if $categoriesFilters.data}
                                        {#each $categoriesFilters.data.data as cat}
                                            <button
                                                class="p-2 text-sm uppercase font-medium text-left rounded-md hover:bg-blue-500 hover:text-white data-active:bg-blue-500 data-active:text-white"
                                                role="menuitem"
                                                tabindex="-1"
                                                id="mobile-menu-item-0"
                                                on:click={() => handleFilterChange('categories', [cat.attributes.slug])}
                                            >
                                                {cat.attributes.title}
                                            </button>
                                        {/each}
                                    {/if} -->
    </div>
  </div>
</div>

<script define:vars={{ slotCategories }}>
  const slotCategoryFilterElem = document.getElementById(
    "slot-category-filter"
  );
  const slotCategoryListElem = document.getElementById("slot-category-list");
  slotCategoryFilterElem.addEventListener("click", () => {
    const slotCategoryFilterElemIsOpen =
      slotCategoryFilterElem.hasAttribute("open");
    console.log(slotCategoryFilterElemIsOpen);
    if (slotCategoryFilterElemIsOpen) {
      slotCategoryFilterElem.removeAttribute("open");
      slotCategoryListElem.removeAttribute("open");
    } else {
      slotCategoryFilterElem.setAttribute("open", "");
      slotCategoryListElem.setAttribute("open", "");
    }
  });
</script>
