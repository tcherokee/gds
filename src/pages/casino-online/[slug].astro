---

import qs from 'qs'
import MainLayout from '../../layouts/MainLayout.astro';
import { urlTranslate } from '../../../utils/data-store.util'
import fetchApi from '../../../lib/strapi';
import { get } from 'svelte/store';
import { getTranslations } from '../../../stores/addTranslations';
import { casinoproviderQs } from "../../../qs/casino-provider"
import type { Casinoprovider } from "../../../interfaces/casino-provider"
import IntroBlock from "../../components/general/introWithImage.astro";
import CasinoTableBlock from "../../components/blocks/casinoTableBlock.astro"
import ContentBlock from '../../components/blocks/contentBlock.astro';
import CasinoComparison from '../../components/casino/casinoComparison.astro';
import Faqs from "../../components/general/faqs.astro";
import CasinoSideBar from '../../components/casino/casinoSidebar.astro';
import Breadcrumb from '../../components/layout/breadcrumbs.astro'

const { slug } = Astro.params; //get the slug from the page url

// Import the QS Query string for custom slugs and prepare it for the API fetch
const query = qs.stringify(casinoproviderQs(slug), {encodeValuesOnly: true})

 // Request to the Fetch Function to get page data from API
const casinoProvider = await fetchApi<Casinoprovider[]>({
	endpoint: 'casino-providers',
    wrappedByKey: 'data',
    query: `?${query}`
})

const translationStore:any = get(getTranslations);

const block = {
    showCasinoFilters: false
}
//generate page url
let siteID = import.meta.env.SITE_ID
let canonical: string = `${import.meta.env.FULL_URL}${urlTranslate[siteID as keyof typeof urlTranslate]['casino-providers-page']}/${Astro.params.slug}`;

//set page breadcrumb
let breadcumb = { breadCrumbText: casinoProvider[0]?.attributes?.title, breadCrumbUrl: null };

//set page seo data
let seo = {
    pageTitle: casinoProvider[0]?.attributes?.seo?.metaTitle,
    metaDescription: casinoProvider[0]?.attributes?.seo?.metaDescription,
    url: canonical
}

---

<MainLayout seoData={seo}>

    <Breadcrumb breadcrumb={breadcumb} />

    <div class="featured-background">

        <IntroBlock 
            data={casinoProvider[0]?.attributes?.IntroductionWithImage}
            timeDate={casinoProvider[0]?.attributes?.updatedAt}
            authorData={casinoProvider[0]?.attributes?.author} />

        <div class="mb-[40px]">
            {casinoProvider[0]?.attributes?.casinoLists.data &&
                <CasinoTableBlock
                    customCasinos={casinoProvider[0]?.attributes?.casinoLists?.data}
                    customPage={true}
                    {block}
                />
            }
        </div>
    </div>

    <div class="xl:container px-2 pb-5 pt-4">
        {(casinoProvider[0]?.attributes?.content1 || casinoProvider[0]?.attributes?.content2 || casinoProvider[0]?.attributes?.content3 || casinoProvider[0]?.attributes?.faqs?.length > 0) &&
            <div class="flex flex-col md:flex-row gap-x-8">
                <div class="order-last md:order-first">
                    <div class="content">
                        {casinoProvider[0]?.attributes?.content1 &&
                            <ContentBlock pageContent={casinoProvider[0]?.attributes?.content1} />
                        }
                        {casinoProvider[0]?.attributes?.content2 &&
                            <ContentBlock pageContent={casinoProvider[0]?.attributes?.content2} />
                        }
                        {casinoProvider[0]?.attributes?.content3 &&
                            <ContentBlock pageContent={casinoProvider[0]?.attributes?.content3} />
                        }
                    </div>

                    {casinoProvider[0]?.attributes?.casinoComparison?.data.length > 0 &&
                        <CasinoComparison
                            block={{}}
                            data={casinoProvider[0]?.attributes?.casinoComparison?.data.slice(0, 3)}
                        />
                    }
                    {casinoProvider[0]?.attributes?.faqs?.length > 0 &&
                        <div class="content">
                            <h2 class="mb-4">{translationStore.faq}</h2>

                            {casinoProvider[0]?.attributes?.faqs.map(faq => 
                                <Faqs data={faq} />
                            )}
                        </div>
                    }
                </div>
                <div class="basis-[315px] shrink-0 order-first mb-5 order-last">
                    <CasinoSideBar />
                </div>
            </div>
        }
    </div>

</MainLayout>