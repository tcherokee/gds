---
// First and Third Party Plugins
import qs from "qs";

// Types
import type { GetStaticPaths } from "astro";
import type { Gamepage } from "../../../interfaces/game-page";
import type {
  HowToGroup,
  HowTo as HowToType,
  BreadcrumbData,
  TranslationData,
  Faqs as FaqsType,
  Block as BlockType,
} from "../../../interfaces/common/types";

// Helpers
import { urlTranslate, GameInfoHeader } from "../../../utils/data-store.util";
import fetchApi from "../../../lib/strapi";

// Queries
import { gamepageQs } from "../../../qs/game-page";
import { customPageLayoutAddOnsQs } from "../../../qs/customPages";

// Components
import MainLayout from "../../layouts/MainLayout.astro";
import Breadcrumb from "../../components/layout/breadcrumbs.astro";
import RelatedCasino from "../../components/games/relatedCasino.astro";
import ProviderGames from "../../components/games/providerGames.astro";
import HowTo from "../../components/general/howTo.astro";
import ContentBlock from "../../components/blocks/contentBlock.astro";
import ProsCons from "../../components/general/proCons.astro";
import CasinoSideBar from "../../components/casino/casinoSidebar.astro";
import ImageCarousel from "../../components/general/imageCarousel.svelte";
import FaqListBlock from "../../components/blocks/faqListBlock.astro";
import GamePlayer from "../../components/games/gamePlayer.svelte";
import QuickLinks from "../../components/helpers/quicklinks.astro";
import AuthorCard from "../../components/general/authorCard.astro";
import { getTranslations } from "../../../utils/api-requests";
import { layoutQs } from "../../../qs/layout";
import type { LayoutData } from "../../../interfaces/layout";

  const query = qs.stringify(gamepageQs(), { encodeValuesOnly: true });
  const gamePage = await fetchApi<Gamepage[]>({
    endpoint: "games",
    wrappedByKey: "data",
    query: `?${query}`,
  });

// Set Up Translation Store
// const translationStore = await getTranslations();

// export const getStaticPaths = (async () => {
//   const query = qs.stringify(gamepageQs(), { encodeValuesOnly: true });
//   const gamePage = await fetchApi<Gamepage[]>({
//     endpoint: "games",
//     wrappedByKey: "data",
//     query: `?${query}`,
//   });

//   console.log('game', gamePage)

//   return gamePage.map((page) => {
//     return {
//       params: { slug: page?.attributes?.slug },
//       props: { page },
//     };
//   });
// }) satisfies GetStaticPaths;

// const { page } = Astro.props;
// const { slug } = Astro.params; //get the slug from the page url

console.log('page', gamePage)
---

<!-- <MainLayout/>


</MainLayout> -->
