---
export const prerender = true;
import qs from 'qs'

// Helpers
import fetchApi from "../../lib/strapi";
import { loadComponents, mapBlocksToDynamicComponents } from '../../lib/loadBlockComponents'

// Query Strings
import { customPageQs } from "../../qs/customPages"

//types and typeguards
import type { GetStaticPaths } from "astro";
import type { CustomPageItem } from "../../interfaces/custom-pages"
import type { Block } from "../../interfaces/common/types.ts"

// Layouts & Components
import MainLayout from '../layouts/MainLayout.astro';
import CasinoSidebar from '../components/casino/casinoSidebar.astro';

export const getStaticPaths = (async () => {

    // Import the QS Query string for custom slugs and prepare it for the API fetch
    const query = qs.stringify(customPageQs(), {encodeValuesOnly: true})
    
    // Request to the Fetch Function to get the custom page slugs from the API
    const customPage = await fetchApi<CustomPageItem[]>({
        endpoint: 'custom-pages',
        wrappedByKey: 'data',
        query: `?${query}`
    })

    return customPage.map((page) => {
        return {
            params: {path: page?.attributes?.urlPath},
            props: { page }
        }
    });
}) satisfies GetStaticPaths;

const { page } = Astro.props
const { path } = Astro.params

// Function to determins how to structure the blocks in the custom pages. Based on the structure of the blocks the number of items in the blue section could change.
const getLoopCounter = (blocks: Block[]): number => {
    if (!blocks || blocks.length < 2) return 2; // Default value if blocks array is not as expected

    const secondBlockComponent = blocks[1]?.['__component'];
    const thirdBlockComponent = blocks[2]?.['__component'];

    if (secondBlockComponent === 'games.new-and-loved-slots' && 
        (thirdBlockComponent === 'casinos.casino-list' || thirdBlockComponent === 'games.games-carousel')) {
        return 3;
    }

    if (secondBlockComponent?.includes('shared') && secondBlockComponent !== 'shared.provider-list') {
        return 1;
    }

    return 2;
};

const loopCounter = getLoopCounter(page?.attributes?.blocks);

// Get the index of the first occurrence of the FAQ
const faqIndex = page?.attributes?.blocks.findIndex(block => block.__component === 'shared.faqs')

const Components = await loadComponents(mapBlocksToDynamicComponents(page.attributes.blocks))

console.log(path, page?.attributes?.blocks)

---
<MainLayout title="Welcome to Astro.">
	<div class="featured-background">
		{
			Components.map((Component, i) => (
				i < loopCounter && <Component data={page.attributes.blocks[i]}/>
		    ))
		}
	</div>

    <div class="xl:container content-auto px-2 pt-5">
		<div class="flex flex-col md:flex-row gap-x-8">
			<div class="order-last md:order-first">
                {
                    Components.map((Component, i) => (
                        i >= loopCounter && <Component 
                            data={page.attributes.blocks[i]}
                            {...(page?.attributes?.blocks[i]?.__component === 'shared.quicklinks' && {block:page.attributes.blocks} )}
                            {...(i === faqIndex && {firstFaq: true} )}
                        />
                    ))
                }
            </div>
            <div class="basis-[315px] shrink-0 order-first mb-5 order-last">
                <CasinoSidebar />
            </div>
        </div>
    </div>
</MainLayout>

